package com.willian.yunmusic.service;

import android.app.Service;
import android.content.Intent;
import android.media.AudioManager;
import android.os.IBinder;
import android.os.RemoteException;

import com.wilian.yunmusic.aidl.IPlayerService;
import com.willian.yunmusic.manager.MusicPlayer;

import java.lang.ref.WeakReference;

/**
 * 播放服务
 */

public class PlayService extends Service implements AudioManager.OnAudioFocusChangeListener {

    private MusicPlayer mMusicPlayer;

    private IBinder mIBinder = new ServerStub(this);

    @Override
    public void onCreate() {
        super.onCreate();
        mMusicPlayer = MusicPlayer.getInstance(this);
    }

    @Override
    public IBinder onBind(Intent intent) {
        return mIBinder;
    }

    /**
     * AIDL
     */
    private class ServerStub extends IPlayerService.Stub {

        private WeakReference<PlayService> mService;

        private ServerStub(PlayService service) {
            mService = new WeakReference<>(service);
        }

        @Override
        public void play() throws RemoteException {
            mService.get().playMusic(1);
        }

        @Override
        public void pause() throws RemoteException {
            mService.get().pauseMusic();
        }

        @Override
        public void prev() throws RemoteException {
            mService.get().prevMusic();
        }

        @Override
        public void next() throws RemoteException {
            mService.get().nextMusic();
        }

        public long getCurrMusicId() throws RemoteException {
            return -1;
        }
    }

    public void playMusic(int position) {
        mMusicPlayer.play(position);
    }

    public void playOrPause(){
        mMusicPlayer.playOrPause();
    }

    public void pauseMusic() {
        mMusicPlayer.pause();
    }

    public void prevMusic() {
        mMusicPlayer.prev();
    }

    public void nextMusic() {
        mMusicPlayer.next();
    }

    @Override
    public void onAudioFocusChange(int focusChange) {
        switch (focusChange) {
            case AudioManager.AUDIOFOCUS_LOSS:
                // 暂停播放，并释放Media资源
                if (mMusicPlayer.isPlaying()) {
                    mMusicPlayer.pause();
                    mMusicPlayer.release();
                }
                break;
            case AudioManager.AUDIOFOCUS_LOSS_TRANSIENT:
            case AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK:
                // 暂停播放，但不释放Media资源
                if (mMusicPlayer.isPlaying()) {
                    mMusicPlayer.pause();
                }
                break;
        }
    }
}
